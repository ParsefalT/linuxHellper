#!/bin/bash 
echo 'Here will be script bash and other chitsheet helper for linux'
# ----------
# Navigation
# ----------
# pwd - название текущего рабочего каталога
# cd - смена текущего на другой каталог
# ls - вывод список содержимого
# ----------
# Researches
# ----------
# file - определяет тип файла
# less - выводит содержимое файла
# ----------
# do fileSys
# ----------
# cp - копирование: cp file file1
# mv - перемещение: mv file /Documents
# mkdir - созадине каталога
# touch - создание файла
# rm - удаление фала, каталога
# ln - создание жесткой 
#    - ln file имя ссылки
#    - ln -s 
# groups symbols
#    - * любая последовательность любых символов
#    - ? любой один символ
#    [symbols] - любой один символ из указанного множества символов
#    [!sumbols] - любой один символ не входящий из указанных символов
#    [[:class:]] - любой один символ, принодлежащий указанному классу
# class symbols
#    [:alnum:] - любой алфавитно-цифровой символ
#    [:alpha:] - любой алфавитный символ
#    [:digit:] - любой цифровой символ
#    [:lower:] - любая буква в нижнем регистре
#    [:upper:] - любая буква в верхнем регистре
# ---------
# Commands
# ---------
# type - сообщает как итерпретируется имя команды
# which - сообщает какая программа будет выполнена
# help, man, info - справка помощник команд
# appropos - выводит список подходящих команд
# whatis - выводит краткое описание команды
# alias - создает псевдоним для команды
#    - unalias - удаление псевдонима
# -----------
# Redirection
# -----------
# cat - объединяет файлы
# sort - сортирует строки текста
# uniq - сообщает о повтор строках или удаляет их
# grep - находит и выводит строки соответ шаблону
# wc - выводит число символов перевода строки, слов и байтов в каждом файле
# head, tail - 10 первых послед строк
# tee - читает данные со стандарт ввода и записывает в стандарт вывод и в файлы
#    - > - записывает в файл
#    - >> - дополняет в конец файла
#    - | - перенаправление: ls | grep Documents
# ------------
# arifmetic
#    $((выражение))
#    echo number_{1..5}
#    echo string_{a..z}
#    echo a{A{1,2},B{3,4}}b
#    echo $(ls)
#    '', "" - меняшая кавычка подавляет подстановку
#    \ - экранирование 
#    \a - звонок
#    \b - backspace
#    \n - новая строка
#    \r - возврат каретки
#    \t - набуляция
# ------------
# history
# ------------
# история команд: history !number 
# ctr+r поиск совпадений
# !! - повторяет полсдению команду
# !? - ласт команда указ строки
# ------------
# Privileges
# ------------
# id - выводит инфу об идеентичности пользователя
# chmod - изменить режим доступа к файлу | d-direcotry, .-file
#      8    2    access
#    - 0 - 000 - ---
#    - 1 - 001 - --x
#    - 2 - 010 - -w-
#    - 3 - 011 - -wx
#    - 4 - 100 - r--
#    - 5 - 101 - r-x
#    - 6 - 110 - rw-
#    - 7 - 111 - rwx
#    - +/-u,+/-g,+/-o - user, group, other 
# chown - изменить владельца файла
# chgrp - изменяет группу файла
# umask - определяет разрешение доступа к файлам по умолчанию
# passwd - изменить пароль пользователю
# sudo - выполняет команнду от имени другого пользователя
# su - запускает оболочку от имени другого пользователя
# setfacl -R -m u:http:rwx /путь/к/папке - даёт доступ без измениня владельца папки/файла
#            -x удаление
# getfacl /путь/к/папке - показывает юзеров с доступом
# ------------
# Process
# ------------
# ps - выводит список процессов выполняющие в текущий момент 
# top - выводит задачи
# jobs - выводит список активных задач
# bg - переводит задания в фоновый режим
# fg - переводит задания на первый план
# kill - посылает сигнал процессу
# killall - останавливает процессы по именам
# shutdown - выключить кампудктер
# ------------
# Environment
# ------------
# printevn - выводит часть или все окружение
# set - устанавливает параметры оболочки
# export - экспортирует окружение для программ
# alias - создает псевдоним команды
# ------------
# Vim
# ------------
# :%s/string/string/g - замена строки на строку глобально
#    g - глобально
#    : - ex - исполнение команды
#    % - диапозон строк
#    s - поиск с заменой
# ------------
# Settings shell
# ------------
# \u - имя пользователя
# \v - номер версии командной оболочки
# \V - номер версии и выпуска командной оболочки
# \w - имя текущего рабочего каталога
# \W - послед часть в имени текущего рабочего каталога
# \! - номер текущей команды в истории
# \# - число команд, введенных в текущем сеансе командной оболочки
# \$ - выводи символ $, если пользователь не является суперюзером
# PS1 - переменная за вывод пользователя
# ------------
# Device storage
# ------------
# mount - монитрует файловые системы
# unmount - размонтирует файловые системы
# fsck - проверяет и восстанавилвает файловые системы
# fdisk - инструмент для работы с таблицей разделов
# mkfs - создает файловые системы
# dd - выполняет запись данных блоками непосредственно в устройство
# genisoimage - создать образ iso
# wodim - записывает данные на оптический носитель
# md5sum - вычисляет контрольную сумму md5
# /etc/fstab - конфиг монтировок
# ------------
# Network
# ------------
# ping - послать пакеты узлу в сети
# traceroute - выводит трасировку маршрута пакетов к сетевому узлу
# ip - инфа о маршрутах, устрайсвах и т.д
# netstat - выводит список сетевых соединений, статистику по сети и прочие
# ftp - file transfer protocol
#    lftp - lftp remote-sys продиванутый ftp
#    sftp - sftp remote-sys использует ssh шифрование
# wget - неитерактивный загрузчик из сети
# ssh - openSHH по для входа в удаленный pc
#     - ssh remote-sys, ssh bob@remote-sys
#    scp - шифрованное коппирование по сети
#        - remote-sys:document.txt . копирование из удаленной системы в текущую
# lsof - команда для полной вывода файла, а также работа его с сетью
# ------------
# Search file
# ------------
# locate - поиск файлов по именам
# find - поиск файлов в иерархии каталогов
#    find ~ -type d - поиск каталогов
#               f - поиск файлов
#               l - символических ссылок
#               c - специальный файл символьного устройства
#               b - специальный файл блочного устройства
#           -name '...'
#           -size c-bite, w-2bitesWord,k-kilobytes,m-megabytes,g-gigabytes
#           -and,-or,-not=-!,\(\)
# stat - выводит статус файла или файловой системы
# ------------
# Archive
# ------------
# 1m = 7byte
# gzip - сжимает и распаковывает файлы
# bzip2 - поблочное сжатие файлов
# tar - архивирование на ленту
#     c - создать
#     x - извлечь
#     r - добавить указ в конец архива
#     t - вывести список содержимого архива
# zip - упаковывает и сжимает
# rsync - резервное копирование файлов или системы/делает синхронизацию файлов и каталогов
#       -  timeshitf free gui <-- аналог rsync 
# ------------
# Regular exp
# ------------
# ^ - начало строки
# $ - конец строки 
# . - любой символ
# [] - совпадение с одним из символов
# {} - совпадение с элементом определенное число раз
# ? - любой один символ
# * - совпадение один или более раз
# + - совпадение с предыдущим элементом один или более раз
# () - объединение выражений
# | - или
# \ - экранирование <-- ''
# ------------
# Format text
# ------------
# nl - нумирует строки
# fold - выполняет перенос строки, ограничивая их указ длиной
#      fold -w 12
# fmt - простое форматирование текста
# pr - форматирует текст для печати
# printf - форматирует и выводит данные
# groff - система форматирования документов
# ------------
# Compyle soft
# ------------
# make - утилита для компилинга программ
# при сборке исполузем: ./configure
#                       make, обычно запускается от root для --> 
# все установленное ПО ставиться в /usr/local/bin 
# ------------
# Shell scripts
# Справка - дистрибутерные приложки хранятся в /usr/bin /usr/sbin
#        все компилки и скрипты лучше хранить в домашней дерриктории /home/bin
#        или в /usr/local/bin - для юзера
#        и в /usr/local/sbin - для админа юзера
#        узнать где будет исполняться приложки можно командой echo $PATH
  TITLE="System Information for $HOSTNAME" # так инициализируем переменные
  CURRENT_TIME=$(date)
  TIME_STAMP="Generated $CURRENT_TIME, by $USER"
# functions
  report_uptime() {
      echo "<h2>System uptime</h2>
            <pre>$(uptime)</pre>"
      return
  }
  report_dick_space() {
      echo "<h2>System utilization</2>
            <pre>$(df -h)</pre>"
      return
  }
  report_home_space() {
      echo "<h2>Home space_utilization</h2>
            <pre>$(du -sh /home/*)</pre>"
      return
  }
# conditions
# --- для проверки файлов основные:
# r - файл существует для чтения пользователя
# w - файл существует для записи пользователя
# x - файл существует для исполение пользователя
# d - существует каталог
# f - существует файл и является обычным файлом
# b - существует файл и являет спец файлом блочного устройства
# c - существует файл и являет спец файлом символьного устройства
# e - файл существует
# --- для првоерки строк основные:
# n - строка не пустая
# z - длина строки больше нуля
# --- для проверки целых чисел:
# eq - равно 1 -eq 1 
# ne - не равно 1 -ne 2 
# le - меньше или равно 1 -le 2
# lt - меньше 1 -lt 2
# ge - больше или равно 2 -ge 1
# gt - больше 2 -gt 1
# ---
# int=5
# if [["$int" =~[0-9]]] - усовершенствованный метод проверок
# -a == &&
# -o == ||
# !  == !=
# ---
# read [-args] [variables] - читает ввода с клавиатуры
  read -p "type 0 or 1 " $REPLY
# ---
# case
  case "$REPLY" in
      1) echo "$USER"
          ;;
      0) echo 'exit'
          exit
          ;;
  esac
# ---
# loops 
# while [[condition]]; do
#   ...
# done
# for i in {a...b}; do echo $i; done
# ---
# case "word" in
  echo "please type num more then 1"
  read x
  if [ x>1 ]; then
      echo 'hello'
  else echo 'bye'
  fi
# ---
# array - имя[индекс]=значение
  echo "
        <html>
        <head>$TITLE</head>
        <body>
            <h1>$TITLE</h1>
            <p>$TIME_STAMP</p>
            ------
            $(report_uptime)
            $(report_dick_space)
            $(report_home_space)
        </body>
        </html>"
#  cat << _EOF_
#    <html>
#        <head>$TITLE</head>
#        <body>
#            <h1>$TITLE</h1>
#            <p>$TIME_STAMP</p>
#        </body>
#    </html>
#_EOF_ # не должно быть никаких пробелов в начале, инче прочитает до конца файл
#так же при таком способе теряется смсысл кавычек
# set -x  <-- включить трасировку, просмотр исполение команды
# ------------
# Clear archLinux
# ------------
# Удаление кэша: pacman -Scc
# Удаление "орфанов": pacman -Qtdq | pacman -Rns -
# Удаление циркулярных зависимостей: pacman -Qqd | pacman -Rsu -
# Информация о пакете: pacman -Qii
# Вручную установленные пакеты: pacman -Qe
# Сторонние пакеты: pacman -Qm
# Та самая страшная команда: LC_ALL=C pacman -Qi | awk '/^Name/{name=$3} /^Installed Size/{print $4$5, name}' | sort -h
# То же самое, но короче: pacgrahp -c
# Удаление вместе с зависимостями: pacman -Rns
echo 'best wiki: https://wiki.archlinux.org/'
echo 'linuxCommands: https://www.man7.org/linux/man-pages/dir_all_by_section.html'
cat << _EOF_
Also recommend
---
two books:
1. Командная строка Уильям Шоттс
2. Внутреннее устройство Linux Брайан Уорд
_EOF_
